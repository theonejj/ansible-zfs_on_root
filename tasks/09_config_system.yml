---
# [ Start Configuring System ]#################################################
- name: Configure System Block
  when:
    - ansible_nodename != "localhost"
  tags:
    - config_system
  block:
    - name: Copy template files to /mnt/etc/
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "{{ live_cd_mountpoint }}/etc/{{ item }}"
        owner: root
        group: root
        mode: '0644'
      with_items:
        - hostname
        - hosts
      loop_control:
        label: "{{ item }}.j2"

    - name: Debug Show Network Adapter Name Detected
      ansible.builtin.debug:
        msg: "{{ ansible_default_ipv4.alias }}"
      when:
        - debug|default(false)

    - name: Create netplan dir
      ansible.builtin.file:
        dest: "{{ live_cd_mountpoint }}/etc/netplan/"
        state: directory
        owner: root
        group: root
        mode: '0644'

    - name: Copy netplan template to /mnt/etc/netplan/01-netcfg.yaml
      ansible.builtin.template:
        src: netplan.j2
        dest: "{{ live_cd_mountpoint }}/etc/netplan/01-netcfg.yaml"
        owner: root
        group: root
        mode: '0644'

    # Update sources.list file on Ubuntu
    - name: Copy sources.list template to /mnt/etc/apt/sources.list
      ansible.builtin.template:
        src: "{{ ansible_distribution }}-sources.list.j2"
        dest: "{{ live_cd_mountpoint }}/etc/apt/sources.list"
        owner: root
        group: root
        mode: '0644'

###############################################################################
# [ Start chroot Environment ]#################################################
# Bind Virtual Filesystem from Live CD to New environment
# NOTE: Not using ansible mount module as we don't want these added to fstab
- name: Work in chroot Environment Block
  when:
    - ansible_nodename != "localhost"
  tags:
    - config_system
  block:
    - name: Binding virtual file systems
      ansible.builtin.command:
        cmd: "{{ item }}"
      register: cmd_output
      changed_when: cmd_output.rc == 0
      with_items:
#        - "mount --rbind /dev  {{ live_cd_mountpoint }}/dev"
#        - "mount --rbind /proc {{ live_cd_mountpoint }}/proc"
#        - "mount --rbind /sys  {{ live_cd_mountpoint }}/sys"
        - "mount -t proc /proc {{ live_cd_mountpoint }}/proc"
        - "mount -t sysfs sys  {{ live_cd_mountpoint }}/sys"
        - "mount -B /dev  {{ live_cd_mountpoint }}/dev"
        - "mount -t devpts pts {{ live_cd_mountpoint }}/dev/pts"
      tags:
        - molecule-idempotence-notest
        # - notest # TODO only for testing

    ###############################################################################
    # [ Apply APT-Cacher-NG Configuration ]########################################
    # If an APT caching proxy server is available set this up early to reduce
    # bandwidth requirements when downloading packages to install. This task will
    # create file: /mnt/etc/apt/apt.conf.d/01proxy

    - name: Apply Apt-Cacher-NG Configuration Update
      ansible.builtin.template:
        src: "apt_01proxy.j2"
        dest: "{{ live_cd_mountpoint }}/etc/apt/apt.conf.d/01proxy"
        owner: "root"
        group: "root"
        mode: "0644"
      when:
        - apt_http_proxy is defined or
          apt_https_proxy is defined

    - name: Run chroot command for apt update
      ansible.builtin.command:
        cmd: "{{ chroot_cmd }} bash -c 'apt-get -qq update'"
      register: cmd_output
      changed_when: cmd_output.rc == 0

    - name: Run chroot command for apt install
      ansible.builtin.command:
        cmd: "{{ chroot_cmd }} bash -c 'apt-get install --yes --no-install-recommends locales keyboard-configuration console-setup'"
      register: cmd_output
      changed_when: cmd_output.rc == 0
      environment:
        DEBIAN_FRONTEND: noninteractive

    - name: Configure chroot Environment
      ansible.builtin.command:
        cmd: "{{ chroot_cmd }} bash -c '{{ item }}'"
      register: cmd_output
      changed_when: cmd_output.rc == 0
      with_items:
        - "locale-gen --purge en_US.UTF-8 {{ locale_prefix }}"
        - "update-locale {{ locale_prefix }}"
        - "dpkg-reconfigure --frontend noninteractive locales tzdata keyboard-configuration console-setup"

###############################################################################
